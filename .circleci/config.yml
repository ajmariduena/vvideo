# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:latest

env: &env
  run:
    name: set environment variables
    command: |
      echo export\ MERGE_PR_NUMBER=$(git log --oneline --merges --pretty=format:"%s" --grep="Merge pull request" -n 1 ${CIRCLE_SHA1} | sed 's/from.*//' | sed -e 's/.*[^0-9]\([0-9]\+\)[^0-9]*$/\1/') >> $BASH_ENV
      echo export\ COMMIT_MSG=\"$(git log --oneline --pretty=format:"%s" -n 1 $CIRCLE_SHA1)\" >> $BASH_ENV

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: install dependency
          command: yarn
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: build storybook
          command: yarn build:storybook
      - persist_to_workspace:
          root: ~/repo
          paths:
            - .git
            - package.json
            - .storybook/dist
            - node_modules
            - yarn.lock

  publish:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: set npm TOKEN
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - attach_workspace:
          at: ~/repo
      - run:
          name: build CommonJS component
          command: yarn build:component
      - run:
          name: build UMD component
          command: yarn build:component:umd
      - run:
          name: publish to npm
          command: npm publish

  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - <<: *env
      - run:
          name: deploy storybook to surge.sh
          command: yarn deploy -- --domain ${CIRCLE_PROJECT_REPONAME}$CIRCLE_PR_NUMBER.surge.sh
      - run: 
          name: teardown if PR is merged
          command: |
            if [[ $MERGE_PR_NUMBER ]]; then
              yarn surge teardown ${CIRCLE_PROJECT_REPONAME}$MERGE_PR_NUMBER.surge.sh;
            fi

workflows:
  version: 2
  build_and_publish:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - build
      - publish:
          requires:
            - build
          filters:
            tags:
              only: /^v\d+[.]\d+[.]\d+$/
            branches:
              ignore: /.*/
